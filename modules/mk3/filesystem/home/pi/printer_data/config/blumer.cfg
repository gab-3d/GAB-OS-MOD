
[network_status]

[menu __main __network]
type: list
name: Network

[menu __main __network _mdns]
type: command
name: mDNS: {printer.network_status.mdns}

[menu __main __network _ethip]
type: command
name: Eth IP: {printer.network_status.ethip}

[menu __main __network _wifissid]
type: command
name: Wifi SSID: {printer.network_status.wifissid}

[menu __main __network _wifiip]
type: command
name: Wifi IP: {printer.network_status.wifiip}

[exclude_object]


[extruder]
full_steps_per_rotation: 200
rotation_distance: 22.85696
filament_diameter: 1.750

# The max extrude cross section is increased for the purge line, but in theory
# its probably a bad idea to have it this large, as its purpose is to catch
# poorly sliced objects that extrude too much for small moves.
max_extrude_cross_section: 5.0
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1250.0
pressure_advance: 0.05
pressure_advance_smooth_time: 0.040

control: pid
min_temp: 0
max_temp: 305
min_extrude_temp: 170


[firmware_retraction]
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 25
retract_length: 0,8

# Hotend
[include klipper-prusa-mk3s/hotends/v6.cfg]

[extruder]
# To tune Pressure Advance see https://www.klipper3d.org/Pressure_Advance.html
nozzle_diameter: 0.6 # Remember to change this if you change nozzle diameter.
pid_Kp: 23.862
pid_Ki: 1.020
pid_Kd: 139.595

[extruder]
max_extrude_only_distance: 200
max_temp: 285
min_extrude_temp: 170
min_temp: 0
nozzle_diameter: 0.4
pressure_advance: 0.02

[probe]


[input_shaper]
shaper_freq_x: 20 #(max recomended is 8.5k)
shaper_freq_y: 20 #(recomended is 9.6k)
shaper_type_x: mzv
shaper_type_y: mzv  

## For faster printing enable
[printer]
max_accel: 5000
max_accel_to_decel: 5000
max_z_velocity: 20
max_z_accel: 300

[bed_mesh]
probe_count: 4,4

[gcode_macro Calibrate_Z]
description: Calibrate Z axis
gcode:
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}
    G1 X20 Y0
    G1 Z{max_z} F2000 #Update with Z height.
    FORCE_MOVE STEPPER=stepper_z Distance=20 Velocity=10
    G1 Z{max_z-50} F2000 # Move down
    G28 # Home again

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  #SDCARD_RESET_FILE
  # Raise nozzle by 60mm
  G1 Z60 F3000
  G90
  # Disable steppers
  M84

[gcode_macro START_PRINT]
gcode:

    # Use absolute coordinates
    G90
    # Home the printer
    G28

    # If you are generating a new bed mesh:
    #BED_MESH_CALIBRATE

    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default
    BED_MESH_CALIBRATE
    Smart_Park

 


[gcode_macro END_PRINT]
gcode:
    G91 ; Posizionamento relativo
    G1 Z+10 ; Muove Z in alto per non colpire nulla
    G1 E-1 F300 ; Ritrae -1
    G90 ; Posizionamento assoluto
    G1 X10 Y210 F2000 ; Muove X10, Y220
    M104 S0 ; Spegne l'estrusore (lo imposta a 0)
    M140 S0 ; Spegne il Bed (lo imposta a 0)
    M106 S0 ; Spegne le ventole di raffreddamento
    #SET_IDLE_TIMEOUT TIMEOUT=1800 ; Imposta timeout di inattività a 30 minuti (1800 secondi)



[output_pin LCD_backlight_pin]

value: 0.50       # 1% of backlight
shutdown_value: 1 # Back to full backlight (without PWM) on restart
cycle_time: 0.001 # Default 0.1s cycle time flickers as hell


[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF2
control: pid
pid_Kp: 56.722
pid_Ki: 0.783
pid_Kd: 1027.369
min_temp: 0
max_temp: 125

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Check current Z position and move up 10mm if it doesn't exceed 210mm
  {% set z_move = 10 %}
  {% set max_z = 210 %}
  {% set current_z = printer.toolhead.position.z %}
  {% if current_z + z_move > max_z %}
    {% set z_move = max_z - current_z %}
  {% endif %}
  G1 Z{z_move} F300
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E70 F400
  G1 E40 F100
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro cooling_bed]
gcode:
  G90                  ; Imposta coordinate assolute
  G1 Y0 F6000          ; Sposta Y a 0 a velocità rapida
  SET_IDLE_TIMEOUT TIMEOUT=1800 ; Imposta timeout di inattività a 30 minuti (1800 secondi)
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=27 MAXIMUM=30
 
  G90 ; Set to absolute positioning
  ; Move the bed back and print head to the right side
  G1 X40 Y210 F3000 ; Move to X: 40, Y: bed depth
  ; Lower the print head
  G1 Z0.4 F600 ; Move Z to 0.6
  ; Move to the middle and start swiping from back to front
  G1 X{250 / 2} F3000 ; Move to the middle of the bed on X axis
  G1 Y0 F3000 ; Move to Y: 0 (front)
  ; Return to the back, move to the right side and swipe again
  G1 Y210 F3000 ; Move to Y: bed depth (back)
  G1 X{250 - 40} F3000 ; Move to the right side of the bed on X axis
  G1 Y0 F3000 ; Move to Y: 0 (front)
  ; Return to the back, move to the left side and swipe again
  G1 Y210 F3000 ; Move to Y: bed depth (back)
  G1 X40 F3000 ; Move to the left side of the bed on X axis
  G1 Y0 F3000 ; Move to Y: 0 (front)
  ; Return to the back
  G1 Y210 F3000 ; Move to Y: bed depth (back)
  M400 ; wait for moves to finish before processing next Gcode (print start)



[safe_z_home]
home_xy_position: 3,3
speed: 50.0
z_hop: 15
z_hop_speed: 15.0
move_to_previous: False

[verify_heater heater_bed]
max_error: 180
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 120
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 1
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.
